Types of our cvs files
1.	List of students details from (NSFAS and University)

import csv
def load_student_data(file_path):
    """
    Load student data from a CSV file.

    Args:
        file_path (str): Path to the CSV file containing student data.

    Returns:
        list: List of dictionaries, where each dictionary represents a student's information.
    """
    student_data = []
    with open(file_path, 'r') as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            student_data.append(row)
    return student_data

def compare_student_data(university_data, nsfas_data):
    """
    Compare student data between the university and NSFAS records.

    Args:
        university_data (list): List of university student data dictionaries.
        nsfas_data (list): List of NSFAS student data dictionaries.

“””
Dictionaries are files consisting of all the students’ information 

    Returns:
        list: List of discrepancies, if any, between the two datasets.
    """
    discrepancies = []

    # Create a set of unique student IDs from university and NSFAS data
    university_ids = set(student['ID'] for student in university_data)
    nsfas_ids = set(student['ID'] for student in nsfas_data)

    # Check for students in university data who are not in NSFAS data
    for student in university_data:
        if student['ID'] not in nsfas_ids:
            discrepancies.append(f"Student ID {student['ID']} in university data but not in NSFAS data")

    # Check for students in NSFAS data who are not in university data
    for student in nsfas_data:
        if student['ID'] not in university_ids:
            discrepancies.append(f"Student ID {student['ID']} in NSFAS data but not in university data")

    return discrepancies

def block_student_applications(discrepancies):
    """
    Block student applications if discrepancies are found.

    Args:
        discrepancies (list): List of discrepancies between university and NSFAS records.
    """
    if discrepancies:
        print("Discrepancies found. Blocking student applications.")
        # Add code here to block student applications in your system
    else:
        print("No discrepancies found. Proceeding with student applications.")

if __name__ == '__main__':
    university_data = load_student_data('data/university_students.csv')
    nsfas_data = load_student_data('data/nsfas_students.csv')

   discrepancies = compare_student_data(university_data, nsfas_data)

    block_student_applications(discrepancies)
